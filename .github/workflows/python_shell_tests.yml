# Python and Shell Tests Reusable Workflow
#
# Runs Python pytest tests and shell script tests.
# Configurable for different Python versions and test paths.
#
# Usage:
#   jobs:
#     tests:
#       uses: artagon/artagon-workflows/.github/workflows/python_shell_tests.yml@main
#       with:
#         python-version: "3.11"
#         pytest-path: tests/
#         shell-test-script: tests/shell/test_shell_scripts.sh

name: Python and Shell Tests

on:
  workflow_call:
    inputs:
      python-version:
        description: 'Python version to use (default: 3.11)'
        required: false
        type: string
        default: '3.11'
      pytest-args:
        description: 'Additional pytest arguments'
        required: false
        type: string
        default: ''
      pytest-path:
        description: 'Path to pytest tests (default: tests/)'
        required: false
        type: string
        default: 'tests/'
      shell-test-script:
        description: 'Path to shell test script (optional)'
        required: false
        type: string
        default: ''
      python-path:
        description: 'PYTHONPATH environment variable (default: scripts)'
        required: false
        type: string
        default: 'scripts'
      requirements-file:
        description: 'Path to requirements file for additional dependencies'
        required: false
        type: string
        default: ''

jobs:
  test:
    name: Python and Shell Tests
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        # actions/checkout@v4.2.2
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Set up Python
        # actions/setup-python@v5.3.0
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b
        with:
          python-version: ${{ inputs.python-version }}
          cache: 'pip'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest

      - name: Install additional requirements
        if: inputs.requirements-file != ''
        run: |
          if [ -f "${{ inputs.requirements-file }}" ]; then
            pip install -r "${{ inputs.requirements-file }}"
          else
            echo "⚠️  Requirements file not found: ${{ inputs.requirements-file }}"
          fi

      - name: Run Python tests
        env:
          PYTHONPATH: ${{ inputs.python-path }}
        run: |
          if [ -d "${{ inputs.pytest-path }}" ]; then
            pytest ${{ inputs.pytest-args }} ${{ inputs.pytest-path }}
          else
            echo "⚠️  Pytest path not found: ${{ inputs.pytest-path }}"
            echo "Skipping pytest"
          fi

      - name: Run shell script tests
        if: inputs.shell-test-script != ''
        env:
          PYTHONPATH: ${{ inputs.python-path }}
        run: |
          SCRIPT="${{ inputs.shell-test-script }}"
          if [ -f "$SCRIPT" ]; then
            chmod +x "$SCRIPT"
            "$SCRIPT"
          else
            echo "⚠️  Shell test script not found: $SCRIPT"
            echo "Skipping shell tests"
          fi
