name: Generate SBOM

on:
  push:
    branches: [main]
  pull_request:
  release:
    types: [published]
  schedule:
    - cron: '0 5 * * 1'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  actions: read
  packages: write

jobs:
  sbom:
    name: Build SBOM and Scan
    runs-on: ubuntu-latest
    env:
      SBOM_DIR: sbom
      # cgr.dev/chainguard/wolfi-base:latest (2024-10-25 digest)
      WOLFI_IMAGE: cgr.dev/chainguard/wolfi-base@sha256:914e2a46c617144692dfcf16afb3fa1865c8e2ab44c47675f5a6c7f0b8c63ba8
    steps:
      - name: Checkout repository
        # actions/checkout@v4.2.2
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          fetch-depth: 0

      - name: Prepare workspace
        run: |
          set -euo pipefail
          mkdir -p "$SBOM_DIR"

      - name: Restore scanner caches
        # actions/cache@v4.1.2
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a
        with:
          path: |
            ~/.cache/trivy
            ~/.cache/grype
          key: sbom-scanners-${{ runner.os }}
          restore-keys: sbom-scanners-

      - name: Generate SBOM and run scanners
        run: |
          set -euo pipefail
          mkdir -p ~/.cache/trivy ~/.cache/grype
          docker run --rm \
            -v "$PWD:/workspace" \
            -v "$HOME/.cache/trivy:/cache/trivy" \
            -v "$HOME/.cache/grype:/cache/grype" \
            -w /workspace \
            -e SBOM_DIR="$SBOM_DIR" \
            -e TRIVY_CACHE_DIR=/cache/trivy \
            -e GRYPE_DB_CACHE_DIR=/cache/grype/db \
            "$WOLFI_IMAGE" \
            sh -euo pipefail -c '
              apk add --no-cache syft trivy grype osv-scanner >/dev/null
              syft dir:/workspace \
                -o spdx-json="$SBOM_DIR/sbom.spdx.json" \
                -o cyclonedx-json="$SBOM_DIR/sbom.cyclonedx.json" \
                -o cyclonedx-xml="$SBOM_DIR/sbom.cyclonedx.xml"
              trivy sbom "$SBOM_DIR/sbom.cyclonedx.json" \
                --format sarif \
                --severity CRITICAL,HIGH \
                --output "$SBOM_DIR/trivy.sarif"
              grype sbom:"$SBOM_DIR/sbom.spdx.json" \
                -o table > "$SBOM_DIR/grype.txt"
              osv-scanner --sbom "$SBOM_DIR/sbom.cyclonedx.json" \
                --output "$SBOM_DIR/osv.json"
            '

      - name: Upload SBOM artifacts
        # actions/upload-artifact@v4.4.3
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882
        with:
          name: sbom-artifacts
          path: sbom/
          retention-days: 14

      - name: Upload SARIF results
        if: hashFiles('sbom/trivy.sarif') != ''
        # github/codeql-action/upload-sarif@v3.27.5
        uses: github/codeql-action/upload-sarif@4f3212b61783c3c68e8309a0f18a699764811cda
        with:
          sarif_file: sbom/trivy.sarif

      - name: Summarize results
        run: |
          set -euo pipefail
          echo "## SBOM Outputs" >> "$GITHUB_STEP_SUMMARY"
          echo "- SPDX JSON: \\`$SBOM_DIR/sbom.spdx.json\\`" >> "$GITHUB_STEP_SUMMARY"
          echo "- CycloneDX JSON: \\`$SBOM_DIR/sbom.cyclonedx.json\\`" >> "$GITHUB_STEP_SUMMARY"
          echo "- CycloneDX XML: \\`$SBOM_DIR/sbom.cyclonedx.xml\\`" >> "$GITHUB_STEP_SUMMARY"
          if [ -f "$SBOM_DIR/grype.txt" ]; then
            CRITICALS=$(grep -c "CRITICAL" "$SBOM_DIR/grype.txt" || true)
            echo "- Grype findings: $CRITICALS critical entries" >> "$GITHUB_STEP_SUMMARY"
          fi
          if [ -f "$SBOM_DIR/osv.json" ]; then
            echo "- OSV report generated" >> "$GITHUB_STEP_SUMMARY"
          fi
