# Reusable Maven CI Workflow
#
# Usage in your project's .github/workflows/ci.yml:
#
# name: CI
# on: [push, pull_request]
# jobs:
#   ci:
#     uses: artagon/artagon-common/.github/workflows/maven-ci.yml@main
#     secrets: inherit

name: Maven CI (Reusable)

on:
  workflow_call:
    inputs:
      java-version:
        description: 'Java version to use'
        required: false
        type: string
        default: '25'
      java-distribution:
        description: 'Java distribution'
        required: false
        type: string
        default: 'temurin'
      maven-args:
        description: 'Additional Maven arguments'
        required: false
        type: string
        default: ''
      run-tests:
        description: 'Whether to run tests'
        required: false
        type: boolean
        default: true
      run-integration-tests:
        description: 'Whether to run integration tests'
        required: false
        type: boolean
        default: false
      upload-coverage:
        description: 'Upload coverage to Codecov'
        required: false
        type: boolean
        default: false

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      checks: write

    steps:
      - name: Checkout code
        # actions/checkout@v4.2.2
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up JDK ${{ inputs.java-version }}
        # actions/setup-java@v4.5.0
        uses: actions/setup-java@8df1039502a15bceb9433410b1a100fbe190c53b
        with:
          java-version: ${{ inputs.java-version }}
          distribution: ${{ inputs.java-distribution }}
          cache: 'maven'

      - name: Cache Maven packages
        # actions/cache@v4.3.0
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830
        with:
          path: ~/.m2/repository
          key: maven-ci-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-ci-${{ runner.os }}-

      - name: Get project version
        id: get-version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Project version: $VERSION"

      - name: Validate inputs
        run: |
          MAVEN_ARGS="${{ inputs.maven-args }}"

          # Validate maven-args contains only safe characters
          if ! echo "$MAVEN_ARGS" | grep -qE '^[-A-Za-z0-9=.,_:/ ]*$'; then
            echo "❌ Invalid maven-args: contains disallowed characters"
            echo "Allowed: alphanumeric, hyphens, equals, dots, commas, underscores, colons, slashes, spaces"
            echo "Provided: $MAVEN_ARGS"
            exit 1
          fi

          echo "✅ Input validation passed"

      - name: Configure settings.xml from template
        run: |
          mkdir -p ~/.m2
          if [ -f ".common/artagon-common/templates/settings.xml" ]; then
            cp .common/artagon-common/templates/settings.xml ~/.m2/settings.xml
            echo "✓ Copied settings.xml from artagon-common template"
          elif [ -f "settings.xml" ]; then
            cp settings.xml ~/.m2/settings.xml
            echo "✓ Copied local settings.xml"
          else
            echo "⚠ No settings.xml found, using default Maven settings"
          fi

      - name: Build with Maven (Skip Tests)
        if: ${{ !inputs.run-tests }}
        run: mvn clean verify -DskipTests ${{ inputs.maven-args }}

      - name: Build and Test with Maven
        if: ${{ inputs.run-tests && !inputs.run-integration-tests }}
        run: mvn clean verify ${{ inputs.maven-args }}

      - name: Build and Test with Integration Tests
        if: ${{ inputs.run-tests && inputs.run-integration-tests }}
        run: mvn clean verify -Partagon-oss-ci ${{ inputs.maven-args }}

      - name: Run Coverage
        if: inputs.upload-coverage && inputs.run-tests
        run: mvn jacoco:report

      - name: Upload Coverage to Codecov
        if: inputs.upload-coverage && inputs.run-tests
        # codecov/codecov-action@v5.0.7
        uses: codecov/codecov-action@015f24e6818733317a2da2edd6290ab26238649a
        with:
          files: ./target/site/jacoco/jacoco.xml
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload Build Artifacts
        if: success()
        # actions/upload-artifact@v4.4.3
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882
        with:
          name: build-artifacts-${{ inputs.java-version }}
          path: |
            **/target/*.jar
            **/target/*.pom
          retention-days: 7

      - name: Upload Test Results
        if: always() && inputs.run-tests
        # actions/upload-artifact@v4.4.3
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882
        with:
          name: test-results-${{ inputs.java-version }}
          path: |
            **/target/surefire-reports/*.xml
            **/target/failsafe-reports/*.xml
          retention-days: 7

      - name: Publish Test Report
        if: always() && inputs.run-tests
        # dorny/test-reporter@v1.9.1
        uses: dorny/test-reporter@31a54ee7ebcacc03a09ea97a7e5465a47b84aea5
        with:
          name: Maven Tests (Java ${{ inputs.java-version }})
          path: '**/target/surefire-reports/*.xml'
          reporter: java-junit
          fail-on-error: false

      - name: Summary
        if: always()
        run: |
          echo "## 🔍 CI Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** ${{ steps.get-version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Java:** ${{ inputs.java-version }} (${{ inputs.java-distribution }})" >> $GITHUB_STEP_SUMMARY
          echo "**Tests:** ${{ inputs.run-tests }}" >> $GITHUB_STEP_SUMMARY
          echo "**Integration Tests:** ${{ inputs.run-integration-tests }}" >> $GITHUB_STEP_SUMMARY
          echo "**Coverage:** ${{ inputs.upload-coverage }}" >> $GITHUB_STEP_SUMMARY
