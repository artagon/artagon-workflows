name: Maven Release Tag (Reusable)

on:
  workflow_call:
    inputs:
      tag:
        description: 'Tag to release (defaults to the caller workflow ref)'
        required: false
        type: string
      java-version:
        description: 'Java version to use when verifying/publishing'
        required: false
        type: string
        default: '25'
      java-distribution:
        description: 'Java distribution to install'
        required: false
        type: string
        default: 'temurin'
      deploy-profile:
        description: 'Maven profile for publishing'
        required: false
        type: string
        default: 'ossrh-deploy,artagon-oss-release'
      skip-tests:
        description: 'Skip tests during deployment'
        required: false
        type: boolean
        default: false
      maven-args:
        description: 'Additional Maven arguments'
        required: false
        type: string
        default: ''
    secrets:
      OSSRH_USERNAME:
        description: 'Sonatype OSSRH username'
        required: true
      OSSRH_PASSWORD:
        description: 'Sonatype OSSRH password'
        required: true
      GPG_PRIVATE_KEY:
        description: 'GPG private key for signing'
        required: true
      GPG_PASSPHRASE:
        description: 'GPG passphrase'
        required: true

jobs:
  validate-tag:
    name: Validate Release Tag
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      tag: ${{ steps.resolve-tag.outputs.tag }}
    steps:
      - name: Resolve tag
        id: resolve-tag
        env:
          INPUT_TAG: ${{ inputs.tag }}
          REF_NAME: ${{ github.ref_name }}
        run: |
          set -euo pipefail
          TAG="${INPUT_TAG:-$REF_NAME}"
          if [[ -z "$TAG" ]]; then
            echo "Unable to resolve tag name. Pass 'tag' input when calling this workflow." >&2
            exit 1
          fi
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          echo "Resolved tag: $TAG"

      - name: Checkout tag
        # actions/checkout@v4.2.2
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          ref: ${{ steps.resolve-tag.outputs.tag }}

      - name: Set up Java ${{ inputs.java-version }}
        # actions/setup-java@v4.5.0
        uses: actions/setup-java@8df1039502a15bceb9433410b1a100fbe190c53b
        with:
          java-version: ${{ inputs.java-version }}
          distribution: ${{ inputs.java-distribution }}
          cache: 'maven'

      - name: Verify Maven version matches tag
        shell: bash
        env:
          RESOLVED_TAG: ${{ steps.resolve-tag.outputs.tag }}
        run: |
          set -euo pipefail
          if [[ -f pom.xml ]]; then
            VERSION_FROM_POM="$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"
            if [[ "${VERSION_FROM_POM}" == *-SNAPSHOT ]]; then
              echo "Release tags must not reference SNAPSHOT versions (${VERSION_FROM_POM})." >&2
              exit 1
            fi
            STRIPPED_TAG="${RESOLVED_TAG#v}"
            if [[ "${VERSION_FROM_POM}" != "${STRIPPED_TAG}" ]]; then
              echo "Project version (${VERSION_FROM_POM}) does not match tag (${RESOLVED_TAG})." >&2
              exit 1
            fi
          else
            echo "pom.xml not present; skipping version verification."
          fi

  release:
    name: Publish Release
    needs: validate-tag
    permissions:
      contents: read
      packages: write
    uses: ./.github/workflows/maven_deploy.yml
    with:
      java-version: ${{ inputs.java-version }}
      java-distribution: ${{ inputs.java-distribution }}
      deploy-profile: ${{ inputs.deploy-profile }}
      skip-tests: ${{ inputs.skip-tests }}
      maven-args: ${{ inputs.maven-args }}
    secrets:
      OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
      OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
      GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
      GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
